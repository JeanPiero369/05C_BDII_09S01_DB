# Stage 1: Build the Next.js application
FROM node:20-alpine AS builder

WORKDIR /app

# Copia los archivos de definición de paquetes y el archivo de configuración de Next.js
# Esto ayuda a que Docker use el cache si estos archivos no cambian
COPY package.json package-lock.json ./
COPY next.config.js ./ # <-- ¡Añade esta línea aquí!

RUN npm install

# Copia el resto del código fuente de tu aplicación Next.js
COPY . .

# Construye la aplicación Next.js para producción
# La bandera --no-lint minimiza las advertencias durante la construcción
RUN npm run build --no-lint

# Stage 2: Create the production image
FROM node:20-alpine AS runner

WORKDIR /app

# Establece el entorno de producción
ENV NODE_ENV production

# Copia los archivos generados por la construcción desde la etapa 'builder'
# next.config.js ya está en /app de la etapa builder, así que solo lo copiamos desde /app
COPY --from=builder /app/next.config.js ./ # <-- Esta línea ahora funcionará correctamente
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules

# Expone el puerto por defecto de Next.js
EXPOSE 3000

# Define el comando para iniciar la aplicación Next.js en producción
CMD ["npm", "start"]